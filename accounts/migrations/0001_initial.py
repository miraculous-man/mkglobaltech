# Generated by Django 4.0.8 on 2024-11-25 16:34

import accounts.models
import builtins
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_student', models.BooleanField(default=False)),
                ('is_lecturer', models.BooleanField(default=False)),
                ('is_parent', models.BooleanField(default=False)),
                ('is_dep_head', models.BooleanField(default=False)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='Male', max_length=50)),
                ('switch', models.CharField(choices=[('True', 'True'), ('False', 'False')], default='False', max_length=50)),
                ('dob', models.DateField(default='2000-01-01', verbose_name=builtins.max)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('phone', models.CharField(blank=True, max_length=60, null=True)),
                ('address', models.CharField(blank=True, max_length=60, null=True)),
                ('picture', models.ImageField(default='default.png', null=True, upload_to='profile_pictures/%y/%m/%d/')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', accounts.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ApplyingStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=30)),
                ('address', models.CharField(max_length=30)),
                ('phone', models.CharField(max_length=30)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('date_of_birth', models.DateField(max_length=30)),
                ('LG_origin', models.CharField(max_length=30)),
                ('state_origin', models.CharField(max_length=30)),
                ('parent_name', models.CharField(max_length=30)),
                ('parent_adress', models.CharField(max_length=30)),
                ('Parent_number', models.CharField(max_length=30)),
                ('Emergency_contact', models.CharField(max_length=30)),
                ('relationship', models.CharField(max_length=30)),
                ('emergency_address', models.CharField(max_length=30)),
                ('emergency_number', models.CharField(max_length=30)),
                ('level', models.CharField(choices=[('Daycear', 'Daycear'), ('Primary', 'Primary'), ('Junior Secondary', 'Junior Secondary'), ('Senior Secondary', 'Senior Secondary')], max_length=25, null=True)),
                ('file', models.FileField(upload_to='Student_files/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'docx', 'doc', 'xls', 'xlsx', 'ppt', 'pptx', 'zip', 'rar', '7zip'])])),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('upload_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('student_certificate_waec_image', models.ImageField(default='default.png', null=True, upload_to='student_certificate_img')),
                ('student_certificate_jamb_image', models.ImageField(default='default.png', null=True, upload_to='student_certificate_img')),
                ('student_certificate_other_image', models.ImageField(default='default.png', null=True, upload_to='student_certificate_img')),
            ],
            managers=[
                ('objects', accounts.models.ApplyingStudentManager()),
            ],
        ),
        migrations.CreateModel(
            name='DepartmentHead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=120)),
                ('last_name', models.CharField(max_length=120)),
                ('phone', models.CharField(blank=True, max_length=60, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('relation_ship', models.TextField(blank=True, choices=[('Father', 'Father'), ('Mother', 'Mother'), ('Brother', 'Brother'), ('Sister', 'Sister'), ('Grand mother', 'Grand mother'), ('Grand father', 'Grand father'), ('Other', 'Other')])),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('Daycear', 'Daycear'), ('Primary', 'Primary'), ('Junior Secondary', 'Junior Secondary'), ('Senior Secondary', 'Senior Secondary')], max_length=25, null=True)),
                ('switch', models.CharField(choices=[('True', 'True'), ('False', 'False')], default='False', max_length=50)),
                ('status', models.CharField(choices=[('1', 'Active'), ('2', 'Inactive')], default=1, max_length=2)),
                ('delete_flag', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'List of Students',
            },
        ),
        migrations.CreateModel(
            name='StudentApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.CharField(max_length=30)),
                ('phone', models.CharField(max_length=30)),
                ('date_of_birth', models.DateField(max_length=30)),
                ('LG_origin', models.CharField(max_length=30)),
                ('state_origin', models.CharField(max_length=30)),
                ('parent_name', models.CharField(max_length=30)),
                ('parent_adress', models.CharField(max_length=30)),
                ('parent_number', models.CharField(max_length=30)),
                ('emergency_contact', models.CharField(max_length=30)),
                ('relationship', models.CharField(max_length=30)),
                ('emergency_address', models.CharField(max_length=30)),
                ('emergency_number', models.CharField(max_length=30)),
                ('level', models.CharField(choices=[('Daycear', 'Daycear'), ('Primary', 'Primary'), ('Junior Secondary', 'Junior Secondary'), ('Senior Secondary', 'Senior Secondary')], max_length=25, null=True)),
                ('student_files', models.FileField(upload_to='Student_files/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'docx', 'doc', 'xls', 'xlsx', 'ppt', 'pptx', 'zip', 'rar', '7zip'])])),
                ('student_certificate_waec_image', models.ImageField(default='default.png', null=True, upload_to='student_certificate_img')),
                ('student_certificate_jamb_image', models.ImageField(default='default.png', null=True, upload_to='student_certificate_img')),
                ('student_certificate_other_image', models.ImageField(default='default.png', null=True, upload_to='student_certificate_img')),
                ('student_passport', models.ImageField(default='default.png', null=True, upload_to='student_passport')),
            ],
        ),
        migrations.CreateModel(
            name='UploadDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('file', models.FileField(upload_to='Student_files/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'docx', 'doc', 'xls', 'xlsx', 'ppt', 'pptx', 'zip', 'rar', '7zip'])])),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('upload_time', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Userinterface_upload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(null=True, upload_to='images')),
                ('news_feed', models.CharField(max_length=200)),
                ('event_feed', models.CharField(max_length=200)),
                ('contact_us', models.CharField(max_length=200)),
            ],
        ),
    ]
